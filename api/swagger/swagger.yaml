swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /books:
    x-swagger-router-controller: books.controller
    get:
      description: get the game system list
      operationId: getBooks
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBooksListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse" 
    post:
      description: add a new game system to the list
      operationId: addBooks
      parameters:
        - in: body
          name: books
          description: The Books to create.
          schema:
            $ref: "#/definitions/Books"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GetBooksResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /books/{id}:
    x-swagger-router-controller: books.controller
    get:
      description: get a game system
      operationId: getBooksbyId
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBooksResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update a books
      operationId: updateBooks
      # define the parameters
      parameters:
        - name: id
          description: books id
          type: number
          in: path
          required: true
        - in: body
          name: books
          description: The Books to update.
          schema:
            $ref: "#/definitions/Books"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBooksResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
    delete:
      description: delete a books
      operationId: deleteBooks
      # define the parameters
      parameters:
        - name: id
          description: books id
          type: number
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"               

                    
           
          
  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Books:
    type: object
    properties:
      name:
        type: string
        description: Name of the Books
        
        
     
      author:
        type: string
        description: Description of the Books
      editorial:
        type: string
        description: Description of the Books
      year:
        type: integer
        description: Description of the Books
      pages:
        type: integer
        description: Description of the Book      

  GetBooksResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      name:
        type: string
        description: Name of the Books
      author:
        type: string
        description: author name  
      editorial:
        type: string 
        description: Description of the Books
      year:
        type: integer
        description: Descrption of the Books
      pages:
        type: integer
        description: Description of the Books 

  GetBooksListResponse:
    required:
      - books
    properties:
      books:
        type: array
        items:
          $ref: "#/definitions/GetBooksResponse"
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
